{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE PatternSynonyms #-}
{-# LANGUAGE ScopedTypeVariables #-}
{-# LANGUAGE NoImplicitPrelude #-}

-- This file was generated by wgpu-raw-hs-codegen on:
--   2021-08-14T11:57:14.367365
-- Using wgpu-native git hash:
--   b10496e7eed9349f0fd541e6dfe5029cb436de74 wgpu-native (v0.9.2.2)

module WGPU.Raw.Generated.Enum.WGPUCompareFunction where

import Data.Word (Word32)
import Foreign (Storable)
import Prelude (Eq, Num, Show)

newtype WGPUCompareFunction = WGPUCompareFunction Word32
  deriving (Eq, Show, Num, Storable)

pattern Undefined :: forall a. (Eq a, Num a) => a
pattern Undefined = 0x00000000

pattern Never :: forall a. (Eq a, Num a) => a
pattern Never = 0x00000001

pattern Less :: forall a. (Eq a, Num a) => a
pattern Less = 0x00000002

pattern LessEqual :: forall a. (Eq a, Num a) => a
pattern LessEqual = 0x00000003

pattern Greater :: forall a. (Eq a, Num a) => a
pattern Greater = 0x00000004

pattern GreaterEqual :: forall a. (Eq a, Num a) => a
pattern GreaterEqual = 0x00000005

pattern Equal :: forall a. (Eq a, Num a) => a
pattern Equal = 0x00000006

pattern NotEqual :: forall a. (Eq a, Num a) => a
pattern NotEqual = 0x00000007

pattern Always :: forall a. (Eq a, Num a) => a
pattern Always = 0x00000008
