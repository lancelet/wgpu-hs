{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE PatternSynonyms #-}
{-# LANGUAGE ScopedTypeVariables #-}
{-# LANGUAGE NoImplicitPrelude #-}

-- This file was generated by wgpu-raw-hs-codegen on:
--   2021-08-14T08:10:31.492798
-- Using wgpu-native git hash:
--   b10496e7eed9349f0fd541e6dfe5029cb436de74 wgpu-native (v0.9.2.2)

module WGPU.Raw.Generated.Enum.WGPUVertexFormat where

import Data.Word (Word32)
import Foreign (Storable)
import Prelude (Eq, Num, Show)

newtype WGPUVertexFormat = WGPUVertexFormat Word32
  deriving (Eq, Show, Num, Storable)

pattern Undefined :: forall a. (Eq a, Num a) => a
pattern Undefined = 0x00000000

pattern Uint8x2 :: forall a. (Eq a, Num a) => a
pattern Uint8x2 = 0x00000001

pattern Uint8x4 :: forall a. (Eq a, Num a) => a
pattern Uint8x4 = 0x00000002

pattern Sint8x2 :: forall a. (Eq a, Num a) => a
pattern Sint8x2 = 0x00000003

pattern Sint8x4 :: forall a. (Eq a, Num a) => a
pattern Sint8x4 = 0x00000004

pattern Unorm8x2 :: forall a. (Eq a, Num a) => a
pattern Unorm8x2 = 0x00000005

pattern Unorm8x4 :: forall a. (Eq a, Num a) => a
pattern Unorm8x4 = 0x00000006

pattern Snorm8x2 :: forall a. (Eq a, Num a) => a
pattern Snorm8x2 = 0x00000007

pattern Snorm8x4 :: forall a. (Eq a, Num a) => a
pattern Snorm8x4 = 0x00000008

pattern Uint16x2 :: forall a. (Eq a, Num a) => a
pattern Uint16x2 = 0x00000009

pattern Uint16x4 :: forall a. (Eq a, Num a) => a
pattern Uint16x4 = 0x0000000A

pattern Sint16x2 :: forall a. (Eq a, Num a) => a
pattern Sint16x2 = 0x0000000B

pattern Sint16x4 :: forall a. (Eq a, Num a) => a
pattern Sint16x4 = 0x0000000C

pattern Unorm16x2 :: forall a. (Eq a, Num a) => a
pattern Unorm16x2 = 0x0000000D

pattern Unorm16x4 :: forall a. (Eq a, Num a) => a
pattern Unorm16x4 = 0x0000000E

pattern Snorm16x2 :: forall a. (Eq a, Num a) => a
pattern Snorm16x2 = 0x0000000F

pattern Snorm16x4 :: forall a. (Eq a, Num a) => a
pattern Snorm16x4 = 0x00000010

pattern Float16x2 :: forall a. (Eq a, Num a) => a
pattern Float16x2 = 0x00000011

pattern Float16x4 :: forall a. (Eq a, Num a) => a
pattern Float16x4 = 0x00000012

pattern Float32 :: forall a. (Eq a, Num a) => a
pattern Float32 = 0x00000013

pattern Float32x2 :: forall a. (Eq a, Num a) => a
pattern Float32x2 = 0x00000014

pattern Float32x3 :: forall a. (Eq a, Num a) => a
pattern Float32x3 = 0x00000015

pattern Float32x4 :: forall a. (Eq a, Num a) => a
pattern Float32x4 = 0x00000016

pattern Uint32 :: forall a. (Eq a, Num a) => a
pattern Uint32 = 0x00000017

pattern Uint32x2 :: forall a. (Eq a, Num a) => a
pattern Uint32x2 = 0x00000018

pattern Uint32x3 :: forall a. (Eq a, Num a) => a
pattern Uint32x3 = 0x00000019

pattern Uint32x4 :: forall a. (Eq a, Num a) => a
pattern Uint32x4 = 0x0000001A

pattern Sint32 :: forall a. (Eq a, Num a) => a
pattern Sint32 = 0x0000001B

pattern Sint32x2 :: forall a. (Eq a, Num a) => a
pattern Sint32x2 = 0x0000001C

pattern Sint32x3 :: forall a. (Eq a, Num a) => a
pattern Sint32x3 = 0x0000001D

pattern Sint32x4 :: forall a. (Eq a, Num a) => a
pattern Sint32x4 = 0x0000001E
