{-# LANGUAGE ForeignFunctionInterface #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# OPTIONS_GHC -Wno-unused-imports #-}

-- This file was generated by wgpu-raw-hs-codegen on:
--   2021-08-25T10:02:03.522705
-- Using wgpu-native git hash:
--   b10496e7eed9349f0fd541e6dfe5029cb436de74 wgpu-native (v0.9.2.2)

module WGPU.Raw.Generated.Fun where

import Control.Monad.IO.Class (MonadIO, liftIO)
import Foreign
import Foreign.C
import WGPU.Raw.Generated.Enum.WGPUAdapterType
import WGPU.Raw.Generated.Enum.WGPUAddressMode
import WGPU.Raw.Generated.Enum.WGPUBackendType
import WGPU.Raw.Generated.Enum.WGPUBlendFactor
import WGPU.Raw.Generated.Enum.WGPUBlendOperation
import WGPU.Raw.Generated.Enum.WGPUBufferBindingType
import WGPU.Raw.Generated.Enum.WGPUBufferMapAsyncStatus
import WGPU.Raw.Generated.Enum.WGPUBufferUsage
import WGPU.Raw.Generated.Enum.WGPUColorWriteMask
import WGPU.Raw.Generated.Enum.WGPUCompareFunction
import WGPU.Raw.Generated.Enum.WGPUCreatePipelineAsyncStatus
import WGPU.Raw.Generated.Enum.WGPUCullMode
import WGPU.Raw.Generated.Enum.WGPUErrorFilter
import WGPU.Raw.Generated.Enum.WGPUErrorType
import WGPU.Raw.Generated.Enum.WGPUFilterMode
import WGPU.Raw.Generated.Enum.WGPUFrontFace
import WGPU.Raw.Generated.Enum.WGPUIndexFormat
import WGPU.Raw.Generated.Enum.WGPUInputStepMode
import WGPU.Raw.Generated.Enum.WGPULoadOp
import WGPU.Raw.Generated.Enum.WGPULogLevel
import WGPU.Raw.Generated.Enum.WGPUMapMode
import WGPU.Raw.Generated.Enum.WGPUNativeFeature
import WGPU.Raw.Generated.Enum.WGPUNativeSType
import WGPU.Raw.Generated.Enum.WGPUPipelineStatisticName
import WGPU.Raw.Generated.Enum.WGPUPresentMode
import WGPU.Raw.Generated.Enum.WGPUPrimitiveTopology
import WGPU.Raw.Generated.Enum.WGPUQueryType
import WGPU.Raw.Generated.Enum.WGPUQueueWorkDoneStatus
import WGPU.Raw.Generated.Enum.WGPUSType
import WGPU.Raw.Generated.Enum.WGPUSamplerBindingType
import WGPU.Raw.Generated.Enum.WGPUShaderStage
import WGPU.Raw.Generated.Enum.WGPUStencilOperation
import WGPU.Raw.Generated.Enum.WGPUStorageTextureAccess
import WGPU.Raw.Generated.Enum.WGPUStoreOp
import WGPU.Raw.Generated.Enum.WGPUTextureAspect
import WGPU.Raw.Generated.Enum.WGPUTextureComponentType
import WGPU.Raw.Generated.Enum.WGPUTextureDimension
import WGPU.Raw.Generated.Enum.WGPUTextureFormat
import WGPU.Raw.Generated.Enum.WGPUTextureSampleType
import WGPU.Raw.Generated.Enum.WGPUTextureUsage
import WGPU.Raw.Generated.Enum.WGPUTextureViewDimension
import WGPU.Raw.Generated.Enum.WGPUVertexFormat
import WGPU.Raw.Generated.Struct.WGPUAdapterExtras
import WGPU.Raw.Generated.Struct.WGPUAdapterProperties
import WGPU.Raw.Generated.Struct.WGPUBindGroupDescriptor
import WGPU.Raw.Generated.Struct.WGPUBindGroupEntry
import WGPU.Raw.Generated.Struct.WGPUBindGroupLayoutDescriptor
import WGPU.Raw.Generated.Struct.WGPUBindGroupLayoutEntry
import WGPU.Raw.Generated.Struct.WGPUBlendComponent
import WGPU.Raw.Generated.Struct.WGPUBlendState
import WGPU.Raw.Generated.Struct.WGPUBufferBindingLayout
import WGPU.Raw.Generated.Struct.WGPUBufferDescriptor
import WGPU.Raw.Generated.Struct.WGPUChainedStruct
import WGPU.Raw.Generated.Struct.WGPUColor
import WGPU.Raw.Generated.Struct.WGPUColorTargetState
import WGPU.Raw.Generated.Struct.WGPUCommandBufferDescriptor
import WGPU.Raw.Generated.Struct.WGPUCommandEncoderDescriptor
import WGPU.Raw.Generated.Struct.WGPUComputePassDescriptor
import WGPU.Raw.Generated.Struct.WGPUComputePipelineDescriptor
import WGPU.Raw.Generated.Struct.WGPUDepthStencilState
import WGPU.Raw.Generated.Struct.WGPUDeviceDescriptor
import WGPU.Raw.Generated.Struct.WGPUDeviceExtras
import WGPU.Raw.Generated.Struct.WGPUExtent3D
import WGPU.Raw.Generated.Struct.WGPUFragmentState
import WGPU.Raw.Generated.Struct.WGPUImageCopyBuffer
import WGPU.Raw.Generated.Struct.WGPUImageCopyTexture
import WGPU.Raw.Generated.Struct.WGPUInstanceDescriptor
import WGPU.Raw.Generated.Struct.WGPUMultisampleState
import WGPU.Raw.Generated.Struct.WGPUOrigin3D
import WGPU.Raw.Generated.Struct.WGPUPipelineLayoutDescriptor
import WGPU.Raw.Generated.Struct.WGPUPrimitiveDepthClampingState
import WGPU.Raw.Generated.Struct.WGPUPrimitiveState
import WGPU.Raw.Generated.Struct.WGPUProgrammableStageDescriptor
import WGPU.Raw.Generated.Struct.WGPUQuerySetDescriptor
import WGPU.Raw.Generated.Struct.WGPURenderBundleDescriptor
import WGPU.Raw.Generated.Struct.WGPURenderBundleEncoderDescriptor
import WGPU.Raw.Generated.Struct.WGPURenderPassColorAttachment
import WGPU.Raw.Generated.Struct.WGPURenderPassDepthStencilAttachment
import WGPU.Raw.Generated.Struct.WGPURenderPassDescriptor
import WGPU.Raw.Generated.Struct.WGPURenderPipelineDescriptor
import WGPU.Raw.Generated.Struct.WGPURequestAdapterOptions
import WGPU.Raw.Generated.Struct.WGPUSamplerBindingLayout
import WGPU.Raw.Generated.Struct.WGPUSamplerDescriptor
import WGPU.Raw.Generated.Struct.WGPUShaderModuleDescriptor
import WGPU.Raw.Generated.Struct.WGPUShaderModuleSPIRVDescriptor
import WGPU.Raw.Generated.Struct.WGPUShaderModuleWGSLDescriptor
import WGPU.Raw.Generated.Struct.WGPUStencilFaceState
import WGPU.Raw.Generated.Struct.WGPUStorageTextureBindingLayout
import WGPU.Raw.Generated.Struct.WGPUSurfaceDescriptor
import WGPU.Raw.Generated.Struct.WGPUSurfaceDescriptorFromCanvasHTMLSelector
import WGPU.Raw.Generated.Struct.WGPUSurfaceDescriptorFromMetalLayer
import WGPU.Raw.Generated.Struct.WGPUSurfaceDescriptorFromWindowsHWND
import WGPU.Raw.Generated.Struct.WGPUSurfaceDescriptorFromXlib
import WGPU.Raw.Generated.Struct.WGPUSwapChainDescriptor
import WGPU.Raw.Generated.Struct.WGPUTextureBindingLayout
import WGPU.Raw.Generated.Struct.WGPUTextureDataLayout
import WGPU.Raw.Generated.Struct.WGPUTextureDescriptor
import WGPU.Raw.Generated.Struct.WGPUTextureViewDescriptor
import WGPU.Raw.Generated.Struct.WGPUVertexAttribute
import WGPU.Raw.Generated.Struct.WGPUVertexBufferLayout
import WGPU.Raw.Generated.Struct.WGPUVertexState
import WGPU.Raw.Types
import Prelude (IO, String, pure, ($), (<$>))

data WGPUHsInstance = WGPUHsInstance
  { wgpuAdapterRequestDeviceIO :: WGPUAdapter -> Ptr (WGPUDeviceDescriptor) -> WGPURequestDeviceCallback -> Ptr (()) -> IO (()),
    wgpuBufferMapAsyncIO :: WGPUBuffer -> WGPUMapModeFlags -> CSize -> CSize -> WGPUBufferMapCallback -> Ptr (()) -> IO (()),
    wgpuInstanceRequestAdapterIO :: WGPUInstance -> Ptr (WGPURequestAdapterOptions) -> WGPURequestAdapterCallback -> Ptr (()) -> IO (()),
    wgpuSurfaceGetPreferredFormatIO :: WGPUSurface -> WGPUAdapter -> WGPUSurfaceGetPreferredFormatCallback -> Ptr (()) -> IO (()),
    wgpuAdapterGetPropertiesIO :: WGPUAdapter -> Ptr (WGPUAdapterProperties) -> IO (()),
    wgpuBufferDestroyIO :: WGPUBuffer -> IO (()),
    wgpuBufferGetMappedRangeIO :: WGPUBuffer -> CSize -> CSize -> IO (Ptr (())),
    wgpuBufferUnmapIO :: WGPUBuffer -> IO (()),
    wgpuCommandEncoderBeginComputePassIO :: WGPUCommandEncoder -> Ptr (WGPUComputePassDescriptor) -> IO (WGPUComputePassEncoder),
    wgpuCommandEncoderBeginRenderPassIO :: WGPUCommandEncoder -> Ptr (WGPURenderPassDescriptor) -> IO (WGPURenderPassEncoder),
    wgpuCommandEncoderCopyBufferToBufferIO :: WGPUCommandEncoder -> WGPUBuffer -> Word64 -> WGPUBuffer -> Word64 -> Word64 -> IO (()),
    wgpuCommandEncoderCopyBufferToTextureIO :: WGPUCommandEncoder -> Ptr (WGPUImageCopyBuffer) -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUExtent3D) -> IO (()),
    wgpuCommandEncoderCopyTextureToTextureIO :: WGPUCommandEncoder -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUExtent3D) -> IO (()),
    wgpuCommandEncoderCopyTextureToBufferIO :: WGPUCommandEncoder -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUImageCopyBuffer) -> Ptr (WGPUExtent3D) -> IO (()),
    wgpuCommandEncoderFinishIO :: WGPUCommandEncoder -> Ptr (WGPUCommandBufferDescriptor) -> IO (WGPUCommandBuffer),
    wgpuComputePassEncoderDispatchIO :: WGPUComputePassEncoder -> Word32 -> Word32 -> Word32 -> IO (()),
    wgpuComputePassEncoderDispatchIndirectIO :: WGPUComputePassEncoder -> WGPUBuffer -> Word64 -> IO (()),
    wgpuComputePassEncoderEndPassIO :: WGPUComputePassEncoder -> IO (()),
    wgpuComputePassEncoderSetBindGroupIO :: WGPUComputePassEncoder -> Word32 -> WGPUBindGroup -> Word32 -> Ptr (Word32) -> IO (()),
    wgpuComputePassEncoderSetPipelineIO :: WGPUComputePassEncoder -> WGPUComputePipeline -> IO (()),
    wgpuDeviceCreateBindGroupIO :: WGPUDevice -> Ptr (WGPUBindGroupDescriptor) -> IO (WGPUBindGroup),
    wgpuDeviceCreateBindGroupLayoutIO :: WGPUDevice -> Ptr (WGPUBindGroupLayoutDescriptor) -> IO (WGPUBindGroupLayout),
    wgpuDeviceCreateBufferIO :: WGPUDevice -> Ptr (WGPUBufferDescriptor) -> IO (WGPUBuffer),
    wgpuDeviceCreateCommandEncoderIO :: WGPUDevice -> Ptr (WGPUCommandEncoderDescriptor) -> IO (WGPUCommandEncoder),
    wgpuDeviceCreateComputePipelineIO :: WGPUDevice -> Ptr (WGPUComputePipelineDescriptor) -> IO (WGPUComputePipeline),
    wgpuDeviceCreatePipelineLayoutIO :: WGPUDevice -> Ptr (WGPUPipelineLayoutDescriptor) -> IO (WGPUPipelineLayout),
    wgpuDeviceCreateRenderPipelineIO :: WGPUDevice -> Ptr (WGPURenderPipelineDescriptor) -> IO (WGPURenderPipeline),
    wgpuDeviceCreateSamplerIO :: WGPUDevice -> Ptr (WGPUSamplerDescriptor) -> IO (WGPUSampler),
    wgpuDeviceCreateShaderModuleIO :: WGPUDevice -> Ptr (WGPUShaderModuleDescriptor) -> IO (WGPUShaderModule),
    wgpuDeviceCreateSwapChainIO :: WGPUDevice -> WGPUSurface -> Ptr (WGPUSwapChainDescriptor) -> IO (WGPUSwapChain),
    wgpuDeviceCreateTextureIO :: WGPUDevice -> Ptr (WGPUTextureDescriptor) -> IO (WGPUTexture),
    wgpuDeviceGetQueueIO :: WGPUDevice -> IO (WGPUQueue),
    wgpuInstanceCreateSurfaceIO :: WGPUInstance -> Ptr (WGPUSurfaceDescriptor) -> IO (WGPUSurface),
    wgpuQueueSubmitIO :: WGPUQueue -> Word32 -> Ptr (WGPUCommandBuffer) -> IO (()),
    wgpuQueueWriteBufferIO :: WGPUQueue -> WGPUBuffer -> Word64 -> Ptr (()) -> CSize -> IO (()),
    wgpuQueueWriteTextureIO :: WGPUQueue -> Ptr (WGPUImageCopyTexture) -> Ptr (()) -> CSize -> Ptr (WGPUTextureDataLayout) -> Ptr (WGPUExtent3D) -> IO (()),
    wgpuRenderPassEncoderDrawIO :: WGPURenderPassEncoder -> Word32 -> Word32 -> Word32 -> Word32 -> IO (()),
    wgpuRenderPassEncoderDrawIndexedIO :: WGPURenderPassEncoder -> Word32 -> Word32 -> Word32 -> Int32 -> Word32 -> IO (()),
    wgpuRenderPassEncoderDrawIndexedIndirectIO :: WGPURenderPassEncoder -> WGPUBuffer -> Word64 -> IO (()),
    wgpuRenderPassEncoderDrawIndirectIO :: WGPURenderPassEncoder -> WGPUBuffer -> Word64 -> IO (()),
    wgpuRenderPassEncoderEndPassIO :: WGPURenderPassEncoder -> IO (()),
    wgpuRenderPassEncoderSetBindGroupIO :: WGPURenderPassEncoder -> Word32 -> WGPUBindGroup -> Word32 -> Ptr (Word32) -> IO (()),
    wgpuRenderPassEncoderSetBlendConstantIO :: WGPURenderPassEncoder -> Ptr (WGPUColor) -> IO (()),
    wgpuRenderPassEncoderSetIndexBufferIO :: WGPURenderPassEncoder -> WGPUBuffer -> WGPUIndexFormat -> Word64 -> Word64 -> IO (()),
    wgpuRenderPassEncoderSetPipelineIO :: WGPURenderPassEncoder -> WGPURenderPipeline -> IO (()),
    wgpuRenderPassEncoderSetScissorRectIO :: WGPURenderPassEncoder -> Word32 -> Word32 -> Word32 -> Word32 -> IO (()),
    wgpuRenderPassEncoderSetStencilReferenceIO :: WGPURenderPassEncoder -> Word32 -> IO (()),
    wgpuRenderPassEncoderSetVertexBufferIO :: WGPURenderPassEncoder -> Word32 -> WGPUBuffer -> Word64 -> Word64 -> IO (()),
    wgpuRenderPassEncoderSetViewportIO :: WGPURenderPassEncoder -> CFloat -> CFloat -> CFloat -> CFloat -> CFloat -> CFloat -> IO (()),
    wgpuSwapChainGetCurrentTextureViewIO :: WGPUSwapChain -> IO (WGPUTextureView),
    wgpuSwapChainPresentIO :: WGPUSwapChain -> IO (()),
    wgpuTextureCreateViewIO :: WGPUTexture -> Ptr (WGPUTextureViewDescriptor) -> IO (WGPUTextureView),
    wgpuTextureDestroyIO :: WGPUTexture -> IO (()),
    wgpuDevicePollIO :: WGPUDevice -> CBool -> IO (()),
    wgpuSetLogCallbackIO :: WGPULogCallback -> IO (()),
    wgpuSetLogLevelIO :: WGPULogLevel -> IO (()),
    wgpuGetVersionIO :: IO (Word32),
    wgpuRenderPassEncoderSetPushConstantsIO :: WGPURenderPassEncoder -> WGPUShaderStage -> Word32 -> Word32 -> Ptr (()) -> IO (())
  }

wgpuAdapterRequestDevice :: (MonadIO m) => WGPUHsInstance -> WGPUAdapter -> Ptr (WGPUDeviceDescriptor) -> WGPURequestDeviceCallback -> Ptr (()) -> m (())
wgpuAdapterRequestDevice inst param1 param2 param3 param4 =
  liftIO $ wgpuAdapterRequestDeviceIO inst param1 param2 param3 param4
{-# INLINEABLE wgpuAdapterRequestDevice #-}

wgpuBufferMapAsync :: (MonadIO m) => WGPUHsInstance -> WGPUBuffer -> WGPUMapModeFlags -> CSize -> CSize -> WGPUBufferMapCallback -> Ptr (()) -> m (())
wgpuBufferMapAsync inst param1 param2 param3 param4 param5 param6 =
  liftIO $ wgpuBufferMapAsyncIO inst param1 param2 param3 param4 param5 param6
{-# INLINEABLE wgpuBufferMapAsync #-}

wgpuInstanceRequestAdapter :: (MonadIO m) => WGPUHsInstance -> WGPUInstance -> Ptr (WGPURequestAdapterOptions) -> WGPURequestAdapterCallback -> Ptr (()) -> m (())
wgpuInstanceRequestAdapter inst param1 param2 param3 param4 =
  liftIO $ wgpuInstanceRequestAdapterIO inst param1 param2 param3 param4
{-# INLINEABLE wgpuInstanceRequestAdapter #-}

wgpuSurfaceGetPreferredFormat :: (MonadIO m) => WGPUHsInstance -> WGPUSurface -> WGPUAdapter -> WGPUSurfaceGetPreferredFormatCallback -> Ptr (()) -> m (())
wgpuSurfaceGetPreferredFormat inst param1 param2 param3 param4 =
  liftIO $ wgpuSurfaceGetPreferredFormatIO inst param1 param2 param3 param4
{-# INLINEABLE wgpuSurfaceGetPreferredFormat #-}

wgpuAdapterGetProperties :: (MonadIO m) => WGPUHsInstance -> WGPUAdapter -> Ptr (WGPUAdapterProperties) -> m (())
wgpuAdapterGetProperties inst param1 param2 =
  liftIO $ wgpuAdapterGetPropertiesIO inst param1 param2
{-# INLINEABLE wgpuAdapterGetProperties #-}

wgpuBufferDestroy :: (MonadIO m) => WGPUHsInstance -> WGPUBuffer -> m (())
wgpuBufferDestroy inst param1 =
  liftIO $ wgpuBufferDestroyIO inst param1
{-# INLINEABLE wgpuBufferDestroy #-}

wgpuBufferGetMappedRange :: (MonadIO m) => WGPUHsInstance -> WGPUBuffer -> CSize -> CSize -> m (Ptr (()))
wgpuBufferGetMappedRange inst param1 param2 param3 =
  liftIO $ wgpuBufferGetMappedRangeIO inst param1 param2 param3
{-# INLINEABLE wgpuBufferGetMappedRange #-}

wgpuBufferUnmap :: (MonadIO m) => WGPUHsInstance -> WGPUBuffer -> m (())
wgpuBufferUnmap inst param1 =
  liftIO $ wgpuBufferUnmapIO inst param1
{-# INLINEABLE wgpuBufferUnmap #-}

wgpuCommandEncoderBeginComputePass :: (MonadIO m) => WGPUHsInstance -> WGPUCommandEncoder -> Ptr (WGPUComputePassDescriptor) -> m (WGPUComputePassEncoder)
wgpuCommandEncoderBeginComputePass inst param1 param2 =
  liftIO $ wgpuCommandEncoderBeginComputePassIO inst param1 param2
{-# INLINEABLE wgpuCommandEncoderBeginComputePass #-}

wgpuCommandEncoderBeginRenderPass :: (MonadIO m) => WGPUHsInstance -> WGPUCommandEncoder -> Ptr (WGPURenderPassDescriptor) -> m (WGPURenderPassEncoder)
wgpuCommandEncoderBeginRenderPass inst param1 param2 =
  liftIO $ wgpuCommandEncoderBeginRenderPassIO inst param1 param2
{-# INLINEABLE wgpuCommandEncoderBeginRenderPass #-}

wgpuCommandEncoderCopyBufferToBuffer :: (MonadIO m) => WGPUHsInstance -> WGPUCommandEncoder -> WGPUBuffer -> Word64 -> WGPUBuffer -> Word64 -> Word64 -> m (())
wgpuCommandEncoderCopyBufferToBuffer inst param1 param2 param3 param4 param5 param6 =
  liftIO $ wgpuCommandEncoderCopyBufferToBufferIO inst param1 param2 param3 param4 param5 param6
{-# INLINEABLE wgpuCommandEncoderCopyBufferToBuffer #-}

wgpuCommandEncoderCopyBufferToTexture :: (MonadIO m) => WGPUHsInstance -> WGPUCommandEncoder -> Ptr (WGPUImageCopyBuffer) -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUExtent3D) -> m (())
wgpuCommandEncoderCopyBufferToTexture inst param1 param2 param3 param4 =
  liftIO $ wgpuCommandEncoderCopyBufferToTextureIO inst param1 param2 param3 param4
{-# INLINEABLE wgpuCommandEncoderCopyBufferToTexture #-}

wgpuCommandEncoderCopyTextureToTexture :: (MonadIO m) => WGPUHsInstance -> WGPUCommandEncoder -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUExtent3D) -> m (())
wgpuCommandEncoderCopyTextureToTexture inst param1 param2 param3 param4 =
  liftIO $ wgpuCommandEncoderCopyTextureToTextureIO inst param1 param2 param3 param4
{-# INLINEABLE wgpuCommandEncoderCopyTextureToTexture #-}

wgpuCommandEncoderCopyTextureToBuffer :: (MonadIO m) => WGPUHsInstance -> WGPUCommandEncoder -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUImageCopyBuffer) -> Ptr (WGPUExtent3D) -> m (())
wgpuCommandEncoderCopyTextureToBuffer inst param1 param2 param3 param4 =
  liftIO $ wgpuCommandEncoderCopyTextureToBufferIO inst param1 param2 param3 param4
{-# INLINEABLE wgpuCommandEncoderCopyTextureToBuffer #-}

wgpuCommandEncoderFinish :: (MonadIO m) => WGPUHsInstance -> WGPUCommandEncoder -> Ptr (WGPUCommandBufferDescriptor) -> m (WGPUCommandBuffer)
wgpuCommandEncoderFinish inst param1 param2 =
  liftIO $ wgpuCommandEncoderFinishIO inst param1 param2
{-# INLINEABLE wgpuCommandEncoderFinish #-}

wgpuComputePassEncoderDispatch :: (MonadIO m) => WGPUHsInstance -> WGPUComputePassEncoder -> Word32 -> Word32 -> Word32 -> m (())
wgpuComputePassEncoderDispatch inst param1 param2 param3 param4 =
  liftIO $ wgpuComputePassEncoderDispatchIO inst param1 param2 param3 param4
{-# INLINEABLE wgpuComputePassEncoderDispatch #-}

wgpuComputePassEncoderDispatchIndirect :: (MonadIO m) => WGPUHsInstance -> WGPUComputePassEncoder -> WGPUBuffer -> Word64 -> m (())
wgpuComputePassEncoderDispatchIndirect inst param1 param2 param3 =
  liftIO $ wgpuComputePassEncoderDispatchIndirectIO inst param1 param2 param3
{-# INLINEABLE wgpuComputePassEncoderDispatchIndirect #-}

wgpuComputePassEncoderEndPass :: (MonadIO m) => WGPUHsInstance -> WGPUComputePassEncoder -> m (())
wgpuComputePassEncoderEndPass inst param1 =
  liftIO $ wgpuComputePassEncoderEndPassIO inst param1
{-# INLINEABLE wgpuComputePassEncoderEndPass #-}

wgpuComputePassEncoderSetBindGroup :: (MonadIO m) => WGPUHsInstance -> WGPUComputePassEncoder -> Word32 -> WGPUBindGroup -> Word32 -> Ptr (Word32) -> m (())
wgpuComputePassEncoderSetBindGroup inst param1 param2 param3 param4 param5 =
  liftIO $ wgpuComputePassEncoderSetBindGroupIO inst param1 param2 param3 param4 param5
{-# INLINEABLE wgpuComputePassEncoderSetBindGroup #-}

wgpuComputePassEncoderSetPipeline :: (MonadIO m) => WGPUHsInstance -> WGPUComputePassEncoder -> WGPUComputePipeline -> m (())
wgpuComputePassEncoderSetPipeline inst param1 param2 =
  liftIO $ wgpuComputePassEncoderSetPipelineIO inst param1 param2
{-# INLINEABLE wgpuComputePassEncoderSetPipeline #-}

wgpuDeviceCreateBindGroup :: (MonadIO m) => WGPUHsInstance -> WGPUDevice -> Ptr (WGPUBindGroupDescriptor) -> m (WGPUBindGroup)
wgpuDeviceCreateBindGroup inst param1 param2 =
  liftIO $ wgpuDeviceCreateBindGroupIO inst param1 param2
{-# INLINEABLE wgpuDeviceCreateBindGroup #-}

wgpuDeviceCreateBindGroupLayout :: (MonadIO m) => WGPUHsInstance -> WGPUDevice -> Ptr (WGPUBindGroupLayoutDescriptor) -> m (WGPUBindGroupLayout)
wgpuDeviceCreateBindGroupLayout inst param1 param2 =
  liftIO $ wgpuDeviceCreateBindGroupLayoutIO inst param1 param2
{-# INLINEABLE wgpuDeviceCreateBindGroupLayout #-}

wgpuDeviceCreateBuffer :: (MonadIO m) => WGPUHsInstance -> WGPUDevice -> Ptr (WGPUBufferDescriptor) -> m (WGPUBuffer)
wgpuDeviceCreateBuffer inst param1 param2 =
  liftIO $ wgpuDeviceCreateBufferIO inst param1 param2
{-# INLINEABLE wgpuDeviceCreateBuffer #-}

wgpuDeviceCreateCommandEncoder :: (MonadIO m) => WGPUHsInstance -> WGPUDevice -> Ptr (WGPUCommandEncoderDescriptor) -> m (WGPUCommandEncoder)
wgpuDeviceCreateCommandEncoder inst param1 param2 =
  liftIO $ wgpuDeviceCreateCommandEncoderIO inst param1 param2
{-# INLINEABLE wgpuDeviceCreateCommandEncoder #-}

wgpuDeviceCreateComputePipeline :: (MonadIO m) => WGPUHsInstance -> WGPUDevice -> Ptr (WGPUComputePipelineDescriptor) -> m (WGPUComputePipeline)
wgpuDeviceCreateComputePipeline inst param1 param2 =
  liftIO $ wgpuDeviceCreateComputePipelineIO inst param1 param2
{-# INLINEABLE wgpuDeviceCreateComputePipeline #-}

wgpuDeviceCreatePipelineLayout :: (MonadIO m) => WGPUHsInstance -> WGPUDevice -> Ptr (WGPUPipelineLayoutDescriptor) -> m (WGPUPipelineLayout)
wgpuDeviceCreatePipelineLayout inst param1 param2 =
  liftIO $ wgpuDeviceCreatePipelineLayoutIO inst param1 param2
{-# INLINEABLE wgpuDeviceCreatePipelineLayout #-}

wgpuDeviceCreateRenderPipeline :: (MonadIO m) => WGPUHsInstance -> WGPUDevice -> Ptr (WGPURenderPipelineDescriptor) -> m (WGPURenderPipeline)
wgpuDeviceCreateRenderPipeline inst param1 param2 =
  liftIO $ wgpuDeviceCreateRenderPipelineIO inst param1 param2
{-# INLINEABLE wgpuDeviceCreateRenderPipeline #-}

wgpuDeviceCreateSampler :: (MonadIO m) => WGPUHsInstance -> WGPUDevice -> Ptr (WGPUSamplerDescriptor) -> m (WGPUSampler)
wgpuDeviceCreateSampler inst param1 param2 =
  liftIO $ wgpuDeviceCreateSamplerIO inst param1 param2
{-# INLINEABLE wgpuDeviceCreateSampler #-}

wgpuDeviceCreateShaderModule :: (MonadIO m) => WGPUHsInstance -> WGPUDevice -> Ptr (WGPUShaderModuleDescriptor) -> m (WGPUShaderModule)
wgpuDeviceCreateShaderModule inst param1 param2 =
  liftIO $ wgpuDeviceCreateShaderModuleIO inst param1 param2
{-# INLINEABLE wgpuDeviceCreateShaderModule #-}

wgpuDeviceCreateSwapChain :: (MonadIO m) => WGPUHsInstance -> WGPUDevice -> WGPUSurface -> Ptr (WGPUSwapChainDescriptor) -> m (WGPUSwapChain)
wgpuDeviceCreateSwapChain inst param1 param2 param3 =
  liftIO $ wgpuDeviceCreateSwapChainIO inst param1 param2 param3
{-# INLINEABLE wgpuDeviceCreateSwapChain #-}

wgpuDeviceCreateTexture :: (MonadIO m) => WGPUHsInstance -> WGPUDevice -> Ptr (WGPUTextureDescriptor) -> m (WGPUTexture)
wgpuDeviceCreateTexture inst param1 param2 =
  liftIO $ wgpuDeviceCreateTextureIO inst param1 param2
{-# INLINEABLE wgpuDeviceCreateTexture #-}

wgpuDeviceGetQueue :: (MonadIO m) => WGPUHsInstance -> WGPUDevice -> m (WGPUQueue)
wgpuDeviceGetQueue inst param1 =
  liftIO $ wgpuDeviceGetQueueIO inst param1
{-# INLINEABLE wgpuDeviceGetQueue #-}

wgpuInstanceCreateSurface :: (MonadIO m) => WGPUHsInstance -> WGPUInstance -> Ptr (WGPUSurfaceDescriptor) -> m (WGPUSurface)
wgpuInstanceCreateSurface inst param1 param2 =
  liftIO $ wgpuInstanceCreateSurfaceIO inst param1 param2
{-# INLINEABLE wgpuInstanceCreateSurface #-}

wgpuQueueSubmit :: (MonadIO m) => WGPUHsInstance -> WGPUQueue -> Word32 -> Ptr (WGPUCommandBuffer) -> m (())
wgpuQueueSubmit inst param1 param2 param3 =
  liftIO $ wgpuQueueSubmitIO inst param1 param2 param3
{-# INLINEABLE wgpuQueueSubmit #-}

wgpuQueueWriteBuffer :: (MonadIO m) => WGPUHsInstance -> WGPUQueue -> WGPUBuffer -> Word64 -> Ptr (()) -> CSize -> m (())
wgpuQueueWriteBuffer inst param1 param2 param3 param4 param5 =
  liftIO $ wgpuQueueWriteBufferIO inst param1 param2 param3 param4 param5
{-# INLINEABLE wgpuQueueWriteBuffer #-}

wgpuQueueWriteTexture :: (MonadIO m) => WGPUHsInstance -> WGPUQueue -> Ptr (WGPUImageCopyTexture) -> Ptr (()) -> CSize -> Ptr (WGPUTextureDataLayout) -> Ptr (WGPUExtent3D) -> m (())
wgpuQueueWriteTexture inst param1 param2 param3 param4 param5 param6 =
  liftIO $ wgpuQueueWriteTextureIO inst param1 param2 param3 param4 param5 param6
{-# INLINEABLE wgpuQueueWriteTexture #-}

wgpuRenderPassEncoderDraw :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> Word32 -> Word32 -> Word32 -> Word32 -> m (())
wgpuRenderPassEncoderDraw inst param1 param2 param3 param4 param5 =
  liftIO $ wgpuRenderPassEncoderDrawIO inst param1 param2 param3 param4 param5
{-# INLINEABLE wgpuRenderPassEncoderDraw #-}

wgpuRenderPassEncoderDrawIndexed :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> Word32 -> Word32 -> Word32 -> Int32 -> Word32 -> m (())
wgpuRenderPassEncoderDrawIndexed inst param1 param2 param3 param4 param5 param6 =
  liftIO $ wgpuRenderPassEncoderDrawIndexedIO inst param1 param2 param3 param4 param5 param6
{-# INLINEABLE wgpuRenderPassEncoderDrawIndexed #-}

wgpuRenderPassEncoderDrawIndexedIndirect :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> WGPUBuffer -> Word64 -> m (())
wgpuRenderPassEncoderDrawIndexedIndirect inst param1 param2 param3 =
  liftIO $ wgpuRenderPassEncoderDrawIndexedIndirectIO inst param1 param2 param3
{-# INLINEABLE wgpuRenderPassEncoderDrawIndexedIndirect #-}

wgpuRenderPassEncoderDrawIndirect :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> WGPUBuffer -> Word64 -> m (())
wgpuRenderPassEncoderDrawIndirect inst param1 param2 param3 =
  liftIO $ wgpuRenderPassEncoderDrawIndirectIO inst param1 param2 param3
{-# INLINEABLE wgpuRenderPassEncoderDrawIndirect #-}

wgpuRenderPassEncoderEndPass :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> m (())
wgpuRenderPassEncoderEndPass inst param1 =
  liftIO $ wgpuRenderPassEncoderEndPassIO inst param1
{-# INLINEABLE wgpuRenderPassEncoderEndPass #-}

wgpuRenderPassEncoderSetBindGroup :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> Word32 -> WGPUBindGroup -> Word32 -> Ptr (Word32) -> m (())
wgpuRenderPassEncoderSetBindGroup inst param1 param2 param3 param4 param5 =
  liftIO $ wgpuRenderPassEncoderSetBindGroupIO inst param1 param2 param3 param4 param5
{-# INLINEABLE wgpuRenderPassEncoderSetBindGroup #-}

wgpuRenderPassEncoderSetBlendConstant :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> Ptr (WGPUColor) -> m (())
wgpuRenderPassEncoderSetBlendConstant inst param1 param2 =
  liftIO $ wgpuRenderPassEncoderSetBlendConstantIO inst param1 param2
{-# INLINEABLE wgpuRenderPassEncoderSetBlendConstant #-}

wgpuRenderPassEncoderSetIndexBuffer :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> WGPUBuffer -> WGPUIndexFormat -> Word64 -> Word64 -> m (())
wgpuRenderPassEncoderSetIndexBuffer inst param1 param2 param3 param4 param5 =
  liftIO $ wgpuRenderPassEncoderSetIndexBufferIO inst param1 param2 param3 param4 param5
{-# INLINEABLE wgpuRenderPassEncoderSetIndexBuffer #-}

wgpuRenderPassEncoderSetPipeline :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> WGPURenderPipeline -> m (())
wgpuRenderPassEncoderSetPipeline inst param1 param2 =
  liftIO $ wgpuRenderPassEncoderSetPipelineIO inst param1 param2
{-# INLINEABLE wgpuRenderPassEncoderSetPipeline #-}

wgpuRenderPassEncoderSetScissorRect :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> Word32 -> Word32 -> Word32 -> Word32 -> m (())
wgpuRenderPassEncoderSetScissorRect inst param1 param2 param3 param4 param5 =
  liftIO $ wgpuRenderPassEncoderSetScissorRectIO inst param1 param2 param3 param4 param5
{-# INLINEABLE wgpuRenderPassEncoderSetScissorRect #-}

wgpuRenderPassEncoderSetStencilReference :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> Word32 -> m (())
wgpuRenderPassEncoderSetStencilReference inst param1 param2 =
  liftIO $ wgpuRenderPassEncoderSetStencilReferenceIO inst param1 param2
{-# INLINEABLE wgpuRenderPassEncoderSetStencilReference #-}

wgpuRenderPassEncoderSetVertexBuffer :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> Word32 -> WGPUBuffer -> Word64 -> Word64 -> m (())
wgpuRenderPassEncoderSetVertexBuffer inst param1 param2 param3 param4 param5 =
  liftIO $ wgpuRenderPassEncoderSetVertexBufferIO inst param1 param2 param3 param4 param5
{-# INLINEABLE wgpuRenderPassEncoderSetVertexBuffer #-}

wgpuRenderPassEncoderSetViewport :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> CFloat -> CFloat -> CFloat -> CFloat -> CFloat -> CFloat -> m (())
wgpuRenderPassEncoderSetViewport inst param1 param2 param3 param4 param5 param6 param7 =
  liftIO $ wgpuRenderPassEncoderSetViewportIO inst param1 param2 param3 param4 param5 param6 param7
{-# INLINEABLE wgpuRenderPassEncoderSetViewport #-}

wgpuSwapChainGetCurrentTextureView :: (MonadIO m) => WGPUHsInstance -> WGPUSwapChain -> m (WGPUTextureView)
wgpuSwapChainGetCurrentTextureView inst param1 =
  liftIO $ wgpuSwapChainGetCurrentTextureViewIO inst param1
{-# INLINEABLE wgpuSwapChainGetCurrentTextureView #-}

wgpuSwapChainPresent :: (MonadIO m) => WGPUHsInstance -> WGPUSwapChain -> m (())
wgpuSwapChainPresent inst param1 =
  liftIO $ wgpuSwapChainPresentIO inst param1
{-# INLINEABLE wgpuSwapChainPresent #-}

wgpuTextureCreateView :: (MonadIO m) => WGPUHsInstance -> WGPUTexture -> Ptr (WGPUTextureViewDescriptor) -> m (WGPUTextureView)
wgpuTextureCreateView inst param1 param2 =
  liftIO $ wgpuTextureCreateViewIO inst param1 param2
{-# INLINEABLE wgpuTextureCreateView #-}

wgpuTextureDestroy :: (MonadIO m) => WGPUHsInstance -> WGPUTexture -> m (())
wgpuTextureDestroy inst param1 =
  liftIO $ wgpuTextureDestroyIO inst param1
{-# INLINEABLE wgpuTextureDestroy #-}

wgpuDevicePoll :: (MonadIO m) => WGPUHsInstance -> WGPUDevice -> CBool -> m (())
wgpuDevicePoll inst param1 param2 =
  liftIO $ wgpuDevicePollIO inst param1 param2
{-# INLINEABLE wgpuDevicePoll #-}

wgpuSetLogCallback :: (MonadIO m) => WGPUHsInstance -> WGPULogCallback -> m (())
wgpuSetLogCallback inst param1 =
  liftIO $ wgpuSetLogCallbackIO inst param1
{-# INLINEABLE wgpuSetLogCallback #-}

wgpuSetLogLevel :: (MonadIO m) => WGPUHsInstance -> WGPULogLevel -> m (())
wgpuSetLogLevel inst param1 =
  liftIO $ wgpuSetLogLevelIO inst param1
{-# INLINEABLE wgpuSetLogLevel #-}

wgpuGetVersion :: (MonadIO m) => WGPUHsInstance -> m (Word32)
wgpuGetVersion inst =
  liftIO $ wgpuGetVersionIO inst
{-# INLINEABLE wgpuGetVersion #-}

wgpuRenderPassEncoderSetPushConstants :: (MonadIO m) => WGPUHsInstance -> WGPURenderPassEncoder -> WGPUShaderStage -> Word32 -> Word32 -> Ptr (()) -> m (())
wgpuRenderPassEncoderSetPushConstants inst param1 param2 param3 param4 param5 =
  liftIO $ wgpuRenderPassEncoderSetPushConstantsIO inst param1 param2 param3 param4 param5
{-# INLINEABLE wgpuRenderPassEncoderSetPushConstants #-}

loadDynamicInstance ::
  (forall a. String -> IO (FunPtr a)) ->
  IO WGPUHsInstance
loadDynamicInstance load = do
  wgpuAdapterRequestDeviceIO <- mk_wgpuhsfn_wgpuAdapterRequestDevice <$> load "wgpuAdapterRequestDevice"
  wgpuBufferMapAsyncIO <- mk_wgpuhsfn_wgpuBufferMapAsync <$> load "wgpuBufferMapAsync"
  wgpuInstanceRequestAdapterIO <- mk_wgpuhsfn_wgpuInstanceRequestAdapter <$> load "wgpuInstanceRequestAdapter"
  wgpuSurfaceGetPreferredFormatIO <- mk_wgpuhsfn_wgpuSurfaceGetPreferredFormat <$> load "wgpuSurfaceGetPreferredFormat"
  wgpuAdapterGetPropertiesIO <- mk_wgpuhsfn_wgpuAdapterGetProperties <$> load "wgpuAdapterGetProperties"
  wgpuBufferDestroyIO <- mk_wgpuhsfn_wgpuBufferDestroy <$> load "wgpuBufferDestroy"
  wgpuBufferGetMappedRangeIO <- mk_wgpuhsfn_wgpuBufferGetMappedRange <$> load "wgpuBufferGetMappedRange"
  wgpuBufferUnmapIO <- mk_wgpuhsfn_wgpuBufferUnmap <$> load "wgpuBufferUnmap"
  wgpuCommandEncoderBeginComputePassIO <- mk_wgpuhsfn_wgpuCommandEncoderBeginComputePass <$> load "wgpuCommandEncoderBeginComputePass"
  wgpuCommandEncoderBeginRenderPassIO <- mk_wgpuhsfn_wgpuCommandEncoderBeginRenderPass <$> load "wgpuCommandEncoderBeginRenderPass"
  wgpuCommandEncoderCopyBufferToBufferIO <- mk_wgpuhsfn_wgpuCommandEncoderCopyBufferToBuffer <$> load "wgpuCommandEncoderCopyBufferToBuffer"
  wgpuCommandEncoderCopyBufferToTextureIO <- mk_wgpuhsfn_wgpuCommandEncoderCopyBufferToTexture <$> load "wgpuCommandEncoderCopyBufferToTexture"
  wgpuCommandEncoderCopyTextureToTextureIO <- mk_wgpuhsfn_wgpuCommandEncoderCopyTextureToTexture <$> load "wgpuCommandEncoderCopyTextureToTexture"
  wgpuCommandEncoderCopyTextureToBufferIO <- mk_wgpuhsfn_wgpuCommandEncoderCopyTextureToBuffer <$> load "wgpuCommandEncoderCopyTextureToBuffer"
  wgpuCommandEncoderFinishIO <- mk_wgpuhsfn_wgpuCommandEncoderFinish <$> load "wgpuCommandEncoderFinish"
  wgpuComputePassEncoderDispatchIO <- mk_wgpuhsfn_wgpuComputePassEncoderDispatch <$> load "wgpuComputePassEncoderDispatch"
  wgpuComputePassEncoderDispatchIndirectIO <- mk_wgpuhsfn_wgpuComputePassEncoderDispatchIndirect <$> load "wgpuComputePassEncoderDispatchIndirect"
  wgpuComputePassEncoderEndPassIO <- mk_wgpuhsfn_wgpuComputePassEncoderEndPass <$> load "wgpuComputePassEncoderEndPass"
  wgpuComputePassEncoderSetBindGroupIO <- mk_wgpuhsfn_wgpuComputePassEncoderSetBindGroup <$> load "wgpuComputePassEncoderSetBindGroup"
  wgpuComputePassEncoderSetPipelineIO <- mk_wgpuhsfn_wgpuComputePassEncoderSetPipeline <$> load "wgpuComputePassEncoderSetPipeline"
  wgpuDeviceCreateBindGroupIO <- mk_wgpuhsfn_wgpuDeviceCreateBindGroup <$> load "wgpuDeviceCreateBindGroup"
  wgpuDeviceCreateBindGroupLayoutIO <- mk_wgpuhsfn_wgpuDeviceCreateBindGroupLayout <$> load "wgpuDeviceCreateBindGroupLayout"
  wgpuDeviceCreateBufferIO <- mk_wgpuhsfn_wgpuDeviceCreateBuffer <$> load "wgpuDeviceCreateBuffer"
  wgpuDeviceCreateCommandEncoderIO <- mk_wgpuhsfn_wgpuDeviceCreateCommandEncoder <$> load "wgpuDeviceCreateCommandEncoder"
  wgpuDeviceCreateComputePipelineIO <- mk_wgpuhsfn_wgpuDeviceCreateComputePipeline <$> load "wgpuDeviceCreateComputePipeline"
  wgpuDeviceCreatePipelineLayoutIO <- mk_wgpuhsfn_wgpuDeviceCreatePipelineLayout <$> load "wgpuDeviceCreatePipelineLayout"
  wgpuDeviceCreateRenderPipelineIO <- mk_wgpuhsfn_wgpuDeviceCreateRenderPipeline <$> load "wgpuDeviceCreateRenderPipeline"
  wgpuDeviceCreateSamplerIO <- mk_wgpuhsfn_wgpuDeviceCreateSampler <$> load "wgpuDeviceCreateSampler"
  wgpuDeviceCreateShaderModuleIO <- mk_wgpuhsfn_wgpuDeviceCreateShaderModule <$> load "wgpuDeviceCreateShaderModule"
  wgpuDeviceCreateSwapChainIO <- mk_wgpuhsfn_wgpuDeviceCreateSwapChain <$> load "wgpuDeviceCreateSwapChain"
  wgpuDeviceCreateTextureIO <- mk_wgpuhsfn_wgpuDeviceCreateTexture <$> load "wgpuDeviceCreateTexture"
  wgpuDeviceGetQueueIO <- mk_wgpuhsfn_wgpuDeviceGetQueue <$> load "wgpuDeviceGetQueue"
  wgpuInstanceCreateSurfaceIO <- mk_wgpuhsfn_wgpuInstanceCreateSurface <$> load "wgpuInstanceCreateSurface"
  wgpuQueueSubmitIO <- mk_wgpuhsfn_wgpuQueueSubmit <$> load "wgpuQueueSubmit"
  wgpuQueueWriteBufferIO <- mk_wgpuhsfn_wgpuQueueWriteBuffer <$> load "wgpuQueueWriteBuffer"
  wgpuQueueWriteTextureIO <- mk_wgpuhsfn_wgpuQueueWriteTexture <$> load "wgpuQueueWriteTexture"
  wgpuRenderPassEncoderDrawIO <- mk_wgpuhsfn_wgpuRenderPassEncoderDraw <$> load "wgpuRenderPassEncoderDraw"
  wgpuRenderPassEncoderDrawIndexedIO <- mk_wgpuhsfn_wgpuRenderPassEncoderDrawIndexed <$> load "wgpuRenderPassEncoderDrawIndexed"
  wgpuRenderPassEncoderDrawIndexedIndirectIO <- mk_wgpuhsfn_wgpuRenderPassEncoderDrawIndexedIndirect <$> load "wgpuRenderPassEncoderDrawIndexedIndirect"
  wgpuRenderPassEncoderDrawIndirectIO <- mk_wgpuhsfn_wgpuRenderPassEncoderDrawIndirect <$> load "wgpuRenderPassEncoderDrawIndirect"
  wgpuRenderPassEncoderEndPassIO <- mk_wgpuhsfn_wgpuRenderPassEncoderEndPass <$> load "wgpuRenderPassEncoderEndPass"
  wgpuRenderPassEncoderSetBindGroupIO <- mk_wgpuhsfn_wgpuRenderPassEncoderSetBindGroup <$> load "wgpuRenderPassEncoderSetBindGroup"
  wgpuRenderPassEncoderSetBlendConstantIO <- mk_wgpuhsfn_wgpuRenderPassEncoderSetBlendConstant <$> load "wgpuRenderPassEncoderSetBlendConstant"
  wgpuRenderPassEncoderSetIndexBufferIO <- mk_wgpuhsfn_wgpuRenderPassEncoderSetIndexBuffer <$> load "wgpuRenderPassEncoderSetIndexBuffer"
  wgpuRenderPassEncoderSetPipelineIO <- mk_wgpuhsfn_wgpuRenderPassEncoderSetPipeline <$> load "wgpuRenderPassEncoderSetPipeline"
  wgpuRenderPassEncoderSetScissorRectIO <- mk_wgpuhsfn_wgpuRenderPassEncoderSetScissorRect <$> load "wgpuRenderPassEncoderSetScissorRect"
  wgpuRenderPassEncoderSetStencilReferenceIO <- mk_wgpuhsfn_wgpuRenderPassEncoderSetStencilReference <$> load "wgpuRenderPassEncoderSetStencilReference"
  wgpuRenderPassEncoderSetVertexBufferIO <- mk_wgpuhsfn_wgpuRenderPassEncoderSetVertexBuffer <$> load "wgpuRenderPassEncoderSetVertexBuffer"
  wgpuRenderPassEncoderSetViewportIO <- mk_wgpuhsfn_wgpuRenderPassEncoderSetViewport <$> load "wgpuRenderPassEncoderSetViewport"
  wgpuSwapChainGetCurrentTextureViewIO <- mk_wgpuhsfn_wgpuSwapChainGetCurrentTextureView <$> load "wgpuSwapChainGetCurrentTextureView"
  wgpuSwapChainPresentIO <- mk_wgpuhsfn_wgpuSwapChainPresent <$> load "wgpuSwapChainPresent"
  wgpuTextureCreateViewIO <- mk_wgpuhsfn_wgpuTextureCreateView <$> load "wgpuTextureCreateView"
  wgpuTextureDestroyIO <- mk_wgpuhsfn_wgpuTextureDestroy <$> load "wgpuTextureDestroy"
  wgpuDevicePollIO <- mk_wgpuhsfn_wgpuDevicePoll <$> load "wgpuDevicePoll"
  wgpuSetLogCallbackIO <- mk_wgpuhsfn_wgpuSetLogCallback <$> load "wgpuSetLogCallback"
  wgpuSetLogLevelIO <- mk_wgpuhsfn_wgpuSetLogLevel <$> load "wgpuSetLogLevel"
  wgpuGetVersionIO <- mk_wgpuhsfn_wgpuGetVersion <$> load "wgpuGetVersion"
  wgpuRenderPassEncoderSetPushConstantsIO <- mk_wgpuhsfn_wgpuRenderPassEncoderSetPushConstants <$> load "wgpuRenderPassEncoderSetPushConstants"
  pure WGPUHsInstance {..}

foreign import ccall safe "dynamic"
  mk_wgpuhsfn_wgpuAdapterRequestDevice :: FunPtr (WGPUAdapter -> Ptr (WGPUDeviceDescriptor) -> WGPURequestDeviceCallback -> Ptr (()) -> IO (())) -> WGPUAdapter -> Ptr (WGPUDeviceDescriptor) -> WGPURequestDeviceCallback -> Ptr (()) -> IO (())

foreign import ccall safe "dynamic"
  mk_wgpuhsfn_wgpuBufferMapAsync :: FunPtr (WGPUBuffer -> WGPUMapModeFlags -> CSize -> CSize -> WGPUBufferMapCallback -> Ptr (()) -> IO (())) -> WGPUBuffer -> WGPUMapModeFlags -> CSize -> CSize -> WGPUBufferMapCallback -> Ptr (()) -> IO (())

foreign import ccall safe "dynamic"
  mk_wgpuhsfn_wgpuInstanceRequestAdapter :: FunPtr (WGPUInstance -> Ptr (WGPURequestAdapterOptions) -> WGPURequestAdapterCallback -> Ptr (()) -> IO (())) -> WGPUInstance -> Ptr (WGPURequestAdapterOptions) -> WGPURequestAdapterCallback -> Ptr (()) -> IO (())

foreign import ccall safe "dynamic"
  mk_wgpuhsfn_wgpuSurfaceGetPreferredFormat :: FunPtr (WGPUSurface -> WGPUAdapter -> WGPUSurfaceGetPreferredFormatCallback -> Ptr (()) -> IO (())) -> WGPUSurface -> WGPUAdapter -> WGPUSurfaceGetPreferredFormatCallback -> Ptr (()) -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuAdapterGetProperties :: FunPtr (WGPUAdapter -> Ptr (WGPUAdapterProperties) -> IO (())) -> WGPUAdapter -> Ptr (WGPUAdapterProperties) -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuBufferDestroy :: FunPtr (WGPUBuffer -> IO (())) -> WGPUBuffer -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuBufferGetMappedRange :: FunPtr (WGPUBuffer -> CSize -> CSize -> IO (Ptr (()))) -> WGPUBuffer -> CSize -> CSize -> IO (Ptr (()))

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuBufferUnmap :: FunPtr (WGPUBuffer -> IO (())) -> WGPUBuffer -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuCommandEncoderBeginComputePass :: FunPtr (WGPUCommandEncoder -> Ptr (WGPUComputePassDescriptor) -> IO (WGPUComputePassEncoder)) -> WGPUCommandEncoder -> Ptr (WGPUComputePassDescriptor) -> IO (WGPUComputePassEncoder)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuCommandEncoderBeginRenderPass :: FunPtr (WGPUCommandEncoder -> Ptr (WGPURenderPassDescriptor) -> IO (WGPURenderPassEncoder)) -> WGPUCommandEncoder -> Ptr (WGPURenderPassDescriptor) -> IO (WGPURenderPassEncoder)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuCommandEncoderCopyBufferToBuffer :: FunPtr (WGPUCommandEncoder -> WGPUBuffer -> Word64 -> WGPUBuffer -> Word64 -> Word64 -> IO (())) -> WGPUCommandEncoder -> WGPUBuffer -> Word64 -> WGPUBuffer -> Word64 -> Word64 -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuCommandEncoderCopyBufferToTexture :: FunPtr (WGPUCommandEncoder -> Ptr (WGPUImageCopyBuffer) -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUExtent3D) -> IO (())) -> WGPUCommandEncoder -> Ptr (WGPUImageCopyBuffer) -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUExtent3D) -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuCommandEncoderCopyTextureToTexture :: FunPtr (WGPUCommandEncoder -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUExtent3D) -> IO (())) -> WGPUCommandEncoder -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUExtent3D) -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuCommandEncoderCopyTextureToBuffer :: FunPtr (WGPUCommandEncoder -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUImageCopyBuffer) -> Ptr (WGPUExtent3D) -> IO (())) -> WGPUCommandEncoder -> Ptr (WGPUImageCopyTexture) -> Ptr (WGPUImageCopyBuffer) -> Ptr (WGPUExtent3D) -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuCommandEncoderFinish :: FunPtr (WGPUCommandEncoder -> Ptr (WGPUCommandBufferDescriptor) -> IO (WGPUCommandBuffer)) -> WGPUCommandEncoder -> Ptr (WGPUCommandBufferDescriptor) -> IO (WGPUCommandBuffer)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuComputePassEncoderDispatch :: FunPtr (WGPUComputePassEncoder -> Word32 -> Word32 -> Word32 -> IO (())) -> WGPUComputePassEncoder -> Word32 -> Word32 -> Word32 -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuComputePassEncoderDispatchIndirect :: FunPtr (WGPUComputePassEncoder -> WGPUBuffer -> Word64 -> IO (())) -> WGPUComputePassEncoder -> WGPUBuffer -> Word64 -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuComputePassEncoderEndPass :: FunPtr (WGPUComputePassEncoder -> IO (())) -> WGPUComputePassEncoder -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuComputePassEncoderSetBindGroup :: FunPtr (WGPUComputePassEncoder -> Word32 -> WGPUBindGroup -> Word32 -> Ptr (Word32) -> IO (())) -> WGPUComputePassEncoder -> Word32 -> WGPUBindGroup -> Word32 -> Ptr (Word32) -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuComputePassEncoderSetPipeline :: FunPtr (WGPUComputePassEncoder -> WGPUComputePipeline -> IO (())) -> WGPUComputePassEncoder -> WGPUComputePipeline -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuDeviceCreateBindGroup :: FunPtr (WGPUDevice -> Ptr (WGPUBindGroupDescriptor) -> IO (WGPUBindGroup)) -> WGPUDevice -> Ptr (WGPUBindGroupDescriptor) -> IO (WGPUBindGroup)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuDeviceCreateBindGroupLayout :: FunPtr (WGPUDevice -> Ptr (WGPUBindGroupLayoutDescriptor) -> IO (WGPUBindGroupLayout)) -> WGPUDevice -> Ptr (WGPUBindGroupLayoutDescriptor) -> IO (WGPUBindGroupLayout)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuDeviceCreateBuffer :: FunPtr (WGPUDevice -> Ptr (WGPUBufferDescriptor) -> IO (WGPUBuffer)) -> WGPUDevice -> Ptr (WGPUBufferDescriptor) -> IO (WGPUBuffer)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuDeviceCreateCommandEncoder :: FunPtr (WGPUDevice -> Ptr (WGPUCommandEncoderDescriptor) -> IO (WGPUCommandEncoder)) -> WGPUDevice -> Ptr (WGPUCommandEncoderDescriptor) -> IO (WGPUCommandEncoder)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuDeviceCreateComputePipeline :: FunPtr (WGPUDevice -> Ptr (WGPUComputePipelineDescriptor) -> IO (WGPUComputePipeline)) -> WGPUDevice -> Ptr (WGPUComputePipelineDescriptor) -> IO (WGPUComputePipeline)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuDeviceCreatePipelineLayout :: FunPtr (WGPUDevice -> Ptr (WGPUPipelineLayoutDescriptor) -> IO (WGPUPipelineLayout)) -> WGPUDevice -> Ptr (WGPUPipelineLayoutDescriptor) -> IO (WGPUPipelineLayout)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuDeviceCreateRenderPipeline :: FunPtr (WGPUDevice -> Ptr (WGPURenderPipelineDescriptor) -> IO (WGPURenderPipeline)) -> WGPUDevice -> Ptr (WGPURenderPipelineDescriptor) -> IO (WGPURenderPipeline)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuDeviceCreateSampler :: FunPtr (WGPUDevice -> Ptr (WGPUSamplerDescriptor) -> IO (WGPUSampler)) -> WGPUDevice -> Ptr (WGPUSamplerDescriptor) -> IO (WGPUSampler)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuDeviceCreateShaderModule :: FunPtr (WGPUDevice -> Ptr (WGPUShaderModuleDescriptor) -> IO (WGPUShaderModule)) -> WGPUDevice -> Ptr (WGPUShaderModuleDescriptor) -> IO (WGPUShaderModule)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuDeviceCreateSwapChain :: FunPtr (WGPUDevice -> WGPUSurface -> Ptr (WGPUSwapChainDescriptor) -> IO (WGPUSwapChain)) -> WGPUDevice -> WGPUSurface -> Ptr (WGPUSwapChainDescriptor) -> IO (WGPUSwapChain)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuDeviceCreateTexture :: FunPtr (WGPUDevice -> Ptr (WGPUTextureDescriptor) -> IO (WGPUTexture)) -> WGPUDevice -> Ptr (WGPUTextureDescriptor) -> IO (WGPUTexture)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuDeviceGetQueue :: FunPtr (WGPUDevice -> IO (WGPUQueue)) -> WGPUDevice -> IO (WGPUQueue)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuInstanceCreateSurface :: FunPtr (WGPUInstance -> Ptr (WGPUSurfaceDescriptor) -> IO (WGPUSurface)) -> WGPUInstance -> Ptr (WGPUSurfaceDescriptor) -> IO (WGPUSurface)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuQueueSubmit :: FunPtr (WGPUQueue -> Word32 -> Ptr (WGPUCommandBuffer) -> IO (())) -> WGPUQueue -> Word32 -> Ptr (WGPUCommandBuffer) -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuQueueWriteBuffer :: FunPtr (WGPUQueue -> WGPUBuffer -> Word64 -> Ptr (()) -> CSize -> IO (())) -> WGPUQueue -> WGPUBuffer -> Word64 -> Ptr (()) -> CSize -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuQueueWriteTexture :: FunPtr (WGPUQueue -> Ptr (WGPUImageCopyTexture) -> Ptr (()) -> CSize -> Ptr (WGPUTextureDataLayout) -> Ptr (WGPUExtent3D) -> IO (())) -> WGPUQueue -> Ptr (WGPUImageCopyTexture) -> Ptr (()) -> CSize -> Ptr (WGPUTextureDataLayout) -> Ptr (WGPUExtent3D) -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderDraw :: FunPtr (WGPURenderPassEncoder -> Word32 -> Word32 -> Word32 -> Word32 -> IO (())) -> WGPURenderPassEncoder -> Word32 -> Word32 -> Word32 -> Word32 -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderDrawIndexed :: FunPtr (WGPURenderPassEncoder -> Word32 -> Word32 -> Word32 -> Int32 -> Word32 -> IO (())) -> WGPURenderPassEncoder -> Word32 -> Word32 -> Word32 -> Int32 -> Word32 -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderDrawIndexedIndirect :: FunPtr (WGPURenderPassEncoder -> WGPUBuffer -> Word64 -> IO (())) -> WGPURenderPassEncoder -> WGPUBuffer -> Word64 -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderDrawIndirect :: FunPtr (WGPURenderPassEncoder -> WGPUBuffer -> Word64 -> IO (())) -> WGPURenderPassEncoder -> WGPUBuffer -> Word64 -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderEndPass :: FunPtr (WGPURenderPassEncoder -> IO (())) -> WGPURenderPassEncoder -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderSetBindGroup :: FunPtr (WGPURenderPassEncoder -> Word32 -> WGPUBindGroup -> Word32 -> Ptr (Word32) -> IO (())) -> WGPURenderPassEncoder -> Word32 -> WGPUBindGroup -> Word32 -> Ptr (Word32) -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderSetBlendConstant :: FunPtr (WGPURenderPassEncoder -> Ptr (WGPUColor) -> IO (())) -> WGPURenderPassEncoder -> Ptr (WGPUColor) -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderSetIndexBuffer :: FunPtr (WGPURenderPassEncoder -> WGPUBuffer -> WGPUIndexFormat -> Word64 -> Word64 -> IO (())) -> WGPURenderPassEncoder -> WGPUBuffer -> WGPUIndexFormat -> Word64 -> Word64 -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderSetPipeline :: FunPtr (WGPURenderPassEncoder -> WGPURenderPipeline -> IO (())) -> WGPURenderPassEncoder -> WGPURenderPipeline -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderSetScissorRect :: FunPtr (WGPURenderPassEncoder -> Word32 -> Word32 -> Word32 -> Word32 -> IO (())) -> WGPURenderPassEncoder -> Word32 -> Word32 -> Word32 -> Word32 -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderSetStencilReference :: FunPtr (WGPURenderPassEncoder -> Word32 -> IO (())) -> WGPURenderPassEncoder -> Word32 -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderSetVertexBuffer :: FunPtr (WGPURenderPassEncoder -> Word32 -> WGPUBuffer -> Word64 -> Word64 -> IO (())) -> WGPURenderPassEncoder -> Word32 -> WGPUBuffer -> Word64 -> Word64 -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderSetViewport :: FunPtr (WGPURenderPassEncoder -> CFloat -> CFloat -> CFloat -> CFloat -> CFloat -> CFloat -> IO (())) -> WGPURenderPassEncoder -> CFloat -> CFloat -> CFloat -> CFloat -> CFloat -> CFloat -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuSwapChainGetCurrentTextureView :: FunPtr (WGPUSwapChain -> IO (WGPUTextureView)) -> WGPUSwapChain -> IO (WGPUTextureView)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuSwapChainPresent :: FunPtr (WGPUSwapChain -> IO (())) -> WGPUSwapChain -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuTextureCreateView :: FunPtr (WGPUTexture -> Ptr (WGPUTextureViewDescriptor) -> IO (WGPUTextureView)) -> WGPUTexture -> Ptr (WGPUTextureViewDescriptor) -> IO (WGPUTextureView)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuTextureDestroy :: FunPtr (WGPUTexture -> IO (())) -> WGPUTexture -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuDevicePoll :: FunPtr (WGPUDevice -> CBool -> IO (())) -> WGPUDevice -> CBool -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuSetLogCallback :: FunPtr (WGPULogCallback -> IO (())) -> WGPULogCallback -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuSetLogLevel :: FunPtr (WGPULogLevel -> IO (())) -> WGPULogLevel -> IO (())

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuGetVersion :: FunPtr (IO (Word32)) -> IO (Word32)

foreign import ccall unsafe "dynamic"
  mk_wgpuhsfn_wgpuRenderPassEncoderSetPushConstants :: FunPtr (WGPURenderPassEncoder -> WGPUShaderStage -> Word32 -> Word32 -> Ptr (()) -> IO (())) -> WGPURenderPassEncoder -> WGPUShaderStage -> Word32 -> Word32 -> Ptr (()) -> IO (())
